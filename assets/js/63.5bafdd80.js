(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{336:function(a,t,e){"use strict";e.r(t);var n=e(14),s=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mysql三大日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql三大日志"}},[a._v("#")]),a._v(" mysql三大日志")]),a._v(" "),t("h2",{attrs:{id:"the-binary-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-binary-log"}},[a._v("#")]),a._v(" The Binary Log")]),a._v(" "),t("p",[a._v("The Binary Log 是我们常说的 binlog")]),a._v(" "),t("p",[a._v("binlog 简单的来说就是"),t("em",[a._v("归档日志")]),a._v("，是 MySQL Server 服务层面的日志，不属于存储引擎特有，记录了某个数据做了什么修改;")]),a._v(" "),t("h3",{attrs:{id:"如何开启-binlog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何开启-binlog"}},[a._v("#")]),a._v(" 如何开启 binlog")]),a._v(" "),t("p",[a._v("在 MySQL8 中默认是启用 binlog 的")]),a._v(" "),t("h3",{attrs:{id:"binlog-有几种格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binlog-有几种格式"}},[a._v("#")]),a._v(" binlog 有几种格式？")]),a._v(" "),t("p",[a._v("binlog 有三种格式")]),a._v(" "),t("ul",[t("li",[a._v("statement")]),a._v(" "),t("li",[a._v("row")]),a._v(" "),t("li",[a._v("mixed")])]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("MySQL5.7.7")]),a._v(" 之前，默认的格式是 statement，在 "),t("code",[a._v("MySQL5.7.7")]),a._v(" 之后，默认的格式是 row。")]),a._v(" "),t("p",[a._v("日志格式由参数 binlog_format 指定，查看一下的 binlog 格式：")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("show")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("global")]),a._v(" variables "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("like")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%binlog_format%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("TODO: 这里的优缺点需要去验证是否正确")]),a._v(" "),t("p",[a._v("详细介绍这三种模式")]),a._v(" "),t("p",[a._v("statement：每一条会修改数据的 sql 语句会记录到 BinLog 中")]),a._v(" "),t("p",[a._v("优点：不需要记录每一行的变化，减少了 binlog 日志量，节约了 IO，从而提高了性能；")]),a._v(" "),t("p",[a._v("缺点：在某些情况下会导致主从数据不一致，比如执行 "),t("code",[a._v("sysdate()")]),a._v("、"),t("code",[a._v("sleep()")]),a._v(" 等。")]),a._v(" "),t("p",[a._v("row：基于行的复制，不记录每条 sql 语句的上下文信息，仅需记录哪条数据被修改了。")]),a._v(" "),t("p",[a._v("优点：不会出现某些特定情况下的存储过程、function、trigger 的调用和触发无法被正确复制的问题；")]),a._v(" "),t("p",[a._v("缺点：会产生大量的日志，尤其是 alter table 的时候会让日志暴涨（因为这相比于 statement 的只记录一条 sql，row 格式的 binlog 会写入大量的行记录日志）")]),a._v(" "),t("p",[a._v("AI 给出的例子")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("+-------------+------+ \n| id | name   |\n+-------------+------+\n| 1  | John   |\n| 2  | Mary   |\n+-------------+------+\n\n# 执行语句:UPDATE test SET name='Susan' WHERE id=2\n\n# 二进制日志 \nUPDATE test SET name='Susan' WHERE id=2 ### UPDATE test SET name='Mary' WHERE id=2\n")])])]),t("p",[a._v("mixed：基于 statement 和 row 两种模式的混合复制，一般的复制使用 statement 模式保存 binlog ，对于 statement 模式无法复制的操作使用 row 模式保存 binlog。")]),a._v(" "),t("blockquote",[t("p",[a._v("新版的 MySQL 中对 row 级别也做了一些优化，当表结构发生变化的时候，会记录语句而不是逐行记录。")])]),a._v(" "),t("h2",{attrs:{id:"binlog-与-canal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binlog-与-canal"}},[a._v("#")]),a._v(" binlog 与 canal")]),a._v(" "),t("p",[a._v("canal [kə'næl]，译意为水道/管道/沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费")]),a._v(" "),t("p",[a._v("canal 就要求 binlog-format 使用 row 模式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[mysqld]\nlog-bin=mysql-bin # 开启 binlog\nbinlog-format=ROW # 选择 ROW 模式\nserver_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复\n")])])]),t("p",[t("a",{attrs:{href:"http://duiying.vip/article/detail?id=11",target:"_blank",rel:"noopener noreferrer"}},[a._v("binlog 有几种格式？"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);